{"version":3,"sources":["App.js","index.js"],"names":["OPTIONS","name","color","CONFIG","ios","service","characteristic","android","PREFIX","App","useState","connected","setConnected","server","useRef","device","events","setEvents","write","os","includes","navigator","platform","userAgent","document","a","config","bluetooth","requestDevice","filters","namePrefix","optionalServices","current","alert","ongattserverdisconnected","gatt","connect","getPrimaryService","_service","getCharacteristic","className","onClick","disconnect","map","option","i","value","encoder","TextEncoder","encoded","encode","Uint8Array","of","valueToSend","from","writeValueWithoutResponse","old","e","send","style","backgroundColor","event","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c7a535e6.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./styles.css\";\n\nconst OPTIONS = [\n  { name: \"SENSITIVE +\", color: \"#04A5B4\" },\n  { name: \"OIL CONTROL +\", color: \"#04A5B4\" },\n  { name: \"UNI TONE +\", color: \"#A8B2E2\" },\n  { name: \"ANTI-AGING +\", color: \"#CBA3D8\" },\n  { name: \"DEEP CARE +\", color: \"#E86B7D\" },\n  { name: \"ANTI-OX VITA C +\", color: \"#FA9C71\" },\n  { name: \"ACNE FREE +\", color: \"#D9E246\" }\n];\n\nconst CONFIG = {\n  ios: {\n    name: \"BeyoungBGen\",\n    service: \"FFE0\",\n    characteristic: \"FFE1\"\n  },\n  android: {\n    name: \"BeyoungBGen\",\n    service: 0xffe0,\n    characteristic: 0xffe1\n  }\n};\n\nfunction isIOS() {\n  return (\n    [\n      \"iPad Simulator\",\n      \"iPhone Simulator\",\n      \"iPod Simulator\",\n      \"iPad\",\n      \"iPhone\",\n      \"iPod\"\n    ].includes(navigator.platform) ||\n    // iPad on iOS 13 detection\n    (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n  );\n}\n\nconst PREFIX = [255, 155];\n\nexport default function App() {\n  const [connected, setConnected] = useState(false);\n  const server = useRef(null);\n  const device = useRef(null);\n  const [events, setEvents] = useState([]);\n  const write = useRef(null);\n  const os = isIOS() ? \"ios\" : \"android\";\n\n  async function connect() {\n    const config = CONFIG[os];\n\n    try {\n      device.current = await navigator.bluetooth.requestDevice({\n        filters: [\n          {\n            namePrefix: config.name\n          }\n        ],\n        optionalServices: [config.service]\n      });\n    } catch (e) {\n      alert(\"Erro ao procurar o dispositivo. Mensagem: \" + e);\n      return;\n    }\n\n    if (device.current == null) {\n      alert(\"Nenhum dispositivo encontrado.\");\n      return;\n    }\n\n    device.current.ongattserverdisconnected = () => setConnected(false);\n\n    try {\n      server.current = await device.current.gatt.connect();\n    } catch (e) {\n      alert(\"Erro ao conectar no dispositivo. Mensagem: \" + e);\n      return;\n    }\n\n    setConnected(true);\n\n    let _service;\n\n    try {\n      _service = await server.current.getPrimaryService(config.service);\n    } catch (e) {\n      alert(`Erro ao acessar o serviço ${config.service}. Mesagem: ${e}`);\n      return;\n    }\n\n    try {\n      write.current = await _service.getCharacteristic(config.characteristic);\n    } catch (e) {\n      alert(\n        `Erro ao acessar a característica ${config.characteristic}. Mesagem: ${e}`\n      );\n      return;\n    }\n  }\n\n  function disconnect() {\n    device.current.gatt.disconnect();\n  }\n\n  function send(value) {\n    if (write.current == null) {\n      return;\n    }\n\n    const encoder = new TextEncoder();\n\n    const encoded =\n      typeof value === \"string\" ? encoder.encode(value) : Uint8Array.of(value);\n\n    const valueToSend = Uint8Array.from([...PREFIX, encoded[0]]);\n\n    try {\n      write.current.writeValueWithoutResponse(valueToSend);\n      setEvents((old) => [value, ...old]);\n      // setEvents((old) => [\n      //   `Enviado: ${value} ${JSON.stringify(Array.from(valueToSend))}`,\n      //   ...old\n      // ]);\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  return (\n    <div className={`App ${connected ? \"connected\" : \"\"}`}>\n      <div className=\"Header\">\n        <div className=\"Content\">\n          <h1>\n            Beyoung Booster<i>Gen</i>\n          </h1>\n          <p>\n            <b>Tipo de dispositivo:</b> {os}\n          </p>\n\n          <p>\n            <span className=\" Status\">\n              Kit {connected ? \"conectado\" : \"desconectado\"}\n            </span>\n          </p>\n\n          <button onClick={connected ? disconnect : connect}>\n            {connected ? \"Desconectar\" : \"Conectar\"}\n          </button>\n        </div>\n      </div>\n\n      <div className={`Content ${connected ? \"visible\" : \"\"}`}>\n        {connected && (\n          <>\n            <div className=\"Buttons\">\n              {OPTIONS.map((option, i) => (\n                <button\n                  key={option.name}\n                  onClick={() => send(i + 1)}\n                  style={{\n                    \"--delay\": `${i / 10}s`,\n                    backgroundColor: option.color\n                  }}\n                  className=\"EventButton\"\n                >\n                  {option.name}\n                </button>\n              ))}\n            </div>\n\n            <div className=\"Events\">\n              <h2>Eventos:</h2>\n              <ul>\n                {events.map((event, i) => (\n                  <li key={event + i}>{event}</li>\n                ))}\n              </ul>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}